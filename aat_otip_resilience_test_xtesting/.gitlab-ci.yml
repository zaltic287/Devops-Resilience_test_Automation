---
include:
  - project: "oln/nif/validation-skc/core/ci-templates/sut"
    ref: "1.4.26"
    file: "templates/gitlab-ci-sut.yml"
  - project: "oln/nif/validation-skc/core/ci-templates/xtesting-generic"
    ref: "2.4.5"
    file: "templates/gitlab-ci-xtesting.yml"
  - project: "oln/nif/validation-skc/core/ci-templates/aat"
    ref: "2.0.8"
    file: "templates/gitlab-ci-aat.yml"
  - project: 'oln/nif/validation-skc/core/ci-templates/otip'
    ref: '1.3.59'
    file: '/templates/gitlab-ci-otip-ssh-basic.yml'

  - local: 'vars/variable.yml'
  - local: 'templates/rules.yml'
  
workflow:
  rules:
    - changes:
        - .gitlab-ci.yml  

variables:
  AAT_SERVER_FILE: "${AAT_LT2_TZ_SERVER}"
  AAT_SERVICE: "E2E_LT"
  XTESTING_UPLOAD_ARTIFACTS: "true"
  XTESTING_UPLOAD_ARTIFACTS_BUCKET: "di-diod-innov-net-skc-vdr-ericsson"
  AWS_ACCESS_KEY_ID: $DIOD_S3_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $DIOD_S3_SECRET_ACCESS_KEY
  OTIP_PORT: "5551"
  OTIP_SCRIPTS_DIR: "/opt/otip/fiches/ausf_udm"
  OTIP_PROFILE_PATH: "$OTIP_SCRIPTS_DIR/Profiles/ausf_udm_ercsn2_RI_0_AAT_Load_site_2.yml"
  OTIP_START_SCENARIO_PATH: "$OTIP_SCRIPTS_DIR/start_scenario.yaml"
  OTIP_STOP_SCENARIO_PATH: "$OTIP_SCRIPTS_DIR/stop_scenario.yaml"
  DRIVER_IMAGE_VERSION: "3.0.1"



aat_read_collection:
  extends:
    - ".xtesting.test"
    - ".aat.base"
  needs: []
  variables:
    XTESTING_TESTS: "read_collection"
  stage: test


otip_start_ausf-udm:
  extends:
    - .otip-test-exec.ssh
  needs: ["aat_read_collection"]
  variables:
    OTIP_SCENARIO_PATH: "$OTIP_START_SCENARIO_PATH"
    RESULTS_PATH: "${CI_PROJECT_DIR}/results-start"


aat_activate_configuration:
  extends:
    - ".xtesting.test"
    - ".aat.base"
  needs: 
  - job: otip_start_ausf-udm
    optional: true
  variables:
    XTESTING_TESTS: "test"
    XTESTING_GITLAB_UPLOAD_ALL_FILES: "false"
    AAT_COLLECTION_NAME: "Orange_AAT_LT_5GC_Activate_Configuration_Site2"
    AAT_THRESHOLD: "0"
  stage: test


aat_run_collection:
  extends:
    - ".xtesting.test"
    - ".aat.base"
  needs: ["aat_activate_configuration"]
  variables:
    XTESTING_TESTS: "test"
    XTESTING_GITLAB_UPLOAD_ALL_FILES: "false"
    AAT_COLLECTION_NAME: "5G_UE_TM_20_min"
    AAT_THRESHOLD: "0"
  stage: test
  allow_failure: true


image: registry.gitlab.tech.orange/oln/aoc-ci-automation/admin/ansible-docker-image:1.2.0
chaosTesting:
      
    extends: .rule_policy
    only:
     changes:
        - ".gitlab-ci.yml"
    stage: test
    needs: 
      - job: aat_activate_configuration
        optional: true

  
    script: |
      cat <<EOF > inventory.ini
      k8s_node ansible_host=$SSH_TARGET ansible_python_interpreter=/usr/bin/python3
      EOF
      # Faire un sleep le temps de charger la configuration sur AAT
      sleep 120
      ANSIBLE_BECOME_PASS="${ANSIBLE_PASS}"
          ansible-playbook -i inventory.ini -u $SSH_USER playbook.yml \
          -e "ssh_target=$SSH_TARGET gitlab_token=$GITLAB_TOKEN \
          gitlab_pipeline_id=$CI_PIPELINE_ID pipeline_name=$ACTION \
          job_status=$CI_JOB_STATUS job_name=$CI_JOB_NAME cluster=$CLUSTER \
          ci_user=$GITLAB_USER_NAME ssh_password=$AMF_SMF_PASSWORD \
          amf_site2=$AMF_TARGET_SITE2 amf_site1=$AMF_TARGET_SITE1 \
          cee_ip_address=$CEE_IP_ADDRESS ssh_password_cee=$SSH_PASSWORD_CEE cee_user=$CEE_USER \
          smf_site2=$SMF_TARGET_SITE2 smf_site1=$SMF_TARGET_SITE1"

      
    tags:
        - graas-like
        - nis
        - k8s


PostchaosTesting:
  stage: test
  needs: 
  - job: chaosTesting
    optional: true
  variables:
    GITLAB_PIPELINE_ID: $CI_PIPELINE_ID
    SSH_PRIVATE: $SSH_PRIVATE
    SSH_USER: $SSH_USER
    CLUSTER: $CLUSTER
    SSH_PRIVATE_SITE1: $SSH_PRIVATE_SITE1
    SSH_PRIVATE_SITE2: $SSH_PRIVATE_SITE2
    SSH_TARGET_SITE2: $SSH_TARGET_SITE2
    SSH_TARGET_SITE1: $SSH_TARGET_SITE1
    PIPELINE_NAME: $ACTION
    JOB_NAME: $CI_JOB_NAME
    CI_USER: $GITLAB_USER_NAME

  trigger:
    project: oln/pace-automation/resilience-automation/ansible_resilience_post_test
    branch: main
    strategy: depend


otip_stop_ausf/udm:
  extends:
    - .otip-test-exec.ssh
  variables:
    OTIP_SCENARIO_PATH: "$OTIP_STOP_SCENARIO_PATH"
    RESULTS_PATH: "${CI_PROJECT_DIR}/results-stop"
  allow_failure: true
  stage: .post

